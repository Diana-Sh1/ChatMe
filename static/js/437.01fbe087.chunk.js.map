{"version":3,"file":"static/js/437.01fbe087.chunk.js","mappings":"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","sources":["redux/users-selector.ts","webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["import {AppStateType} from \"./redux-store\";\n\nexport const getUsers = (state: AppStateType) => {\n    return state.usersPage.users;\n}\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalItemsCount\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}\nexport const getUsersFilter = (state: AppStateType) => {\n    return state.usersPage.filter\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Users_content__eVkcM\",\"inner\":\"Users_inner__79Gij\",\"user_logo\":\"Users_user_logo__xncyl\",\"title\":\"Users_title__605GK\",\"block_main\":\"Users_block_main__MgENi\",\"block_buttons\":\"Users_block_buttons__ZEmQi\",\"user_info\":\"Users_user_info__TBDOm\",\"status_info\":\"Users_status_info__kBCoF\",\"subscribe_btn\":\"Users_subscribe_btn__u3aDb\",\"userInfo_btn\":\"Users_userInfo_btn__OeMtH\",\"pagination\":\"Users_pagination__S-sSj\",\"selectedPage\":\"Users_selectedPage__PbAMG\",\"form_wrapper\":\"Users_form_wrapper__xJUx+\",\"input\":\"Users_input__-PUnQ\",\"select\":\"Users_select__Gdjtl\",\"errors\":\"Users_errors__0uSpI\",\"btn\":\"Users_btn__VOkk+\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\"};","import React, {FC} from \"react\";\nimport s from \"./Paginator.module.css\"\nimport {useState} from \"react\";\n\ntype Props = {\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    totalItemsCount: number\n    pageSize: number\n    portionSize?: number\n}\nlet Paginator: FC<Props> = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 8}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages: number[] = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionNumber = portionNumber * portionSize;\n\n\n    return <>\n        {portionNumber > 1 &&\n            <button onClick={()=> {setPortionNumber(portionNumber - 1 )}}>&#8592;</button>}\n\n        {pages\n            .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\n            .map(p => {\n            return <span key={p} onClick={() => {\n                onPageChanged(p)\n            }}\n                         className={currentPage === p ? s.selectedPage : ''}>{p}</span>\n        })}\n        { portionCount > portionNumber &&\n            <button onClick={()=> {setPortionNumber (portionNumber + 1)}}>&#8594;</button>\n        }\n    </>\n}\n\nexport default Paginator;","import React, {FC} from \"react\";\nimport s from \"./Users.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport userDefaultPic from '../../assets/user_default2.png'\nimport {UserType} from \"../../types/types\";\n\ntype PropsType = {\n    user: UserType\n    followingInProgress: number[]\n    follow: (userId: number)=> void\n    unfollow: (userId: number)=> void\n}\nconst User: FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\n    return <div className={s.inner}>\n        <div className={s.user_logo}>\n            <NavLink to={'/profile/' + user.id}>\n                <img src={user.photos.small != null ? user.photos.small : userDefaultPic} alt=\"\"/>\n            </NavLink>\n\n        </div>\n        <div className={s.block_main}>\n            <div className={s.user_info}>{user.name}</div>\n            <div className={s.status_info}>{user.status}</div>\n        </div>\n        <div className={s.block_buttons}>\n            {user.followed\n                ? <button disabled={followingInProgress\n                    .some(id => id === user.id)} onClick={() => { unfollow(user.id)\n                }} className={s.subscribe_btn}>Unfollow</button>\n                : <button disabled={followingInProgress\n                    .some(id => id === user.id)} onClick={() => {follow(user.id)\n                }} className={s.subscribe_btn}>Follow</button>\n            }\n        </div>\n        </div>\n        }\nexport default User;\n","import {useForm} from \"react-hook-form\";\nimport React, {FC} from \"react\";\nimport {FilterType} from \"../../redux/users-reducer\";\nimport s from \"./Users.module.css\"\nimport {useSelector} from \"react-redux\";\nimport {getUsersFilter} from \"../../redux/users-selector\";\n\ntype PropsType = {\n    onFilterChanged: (filter: FilterType)=> void\n}\n\nexport const UsersSearchForm: FC<PropsType> = React.memo((props) => {\n\n    const filter = useSelector(getUsersFilter)\n\n    type FriendType = \"true\" | \"false\" | \"null\"\n\n    type FormType = {\n        term: string;\n        friend: FriendType\n    };\n\n    const onSubmit = (data: FormType) => {\n        const filterF: FilterType = {\n            term: data.term,\n            friend: data.friend === \"null\" ? null : data.friend === \"true\"\n        }\n        props.onFilterChanged(filterF);\n\n    }\n    const {register, handleSubmit} = useForm<FormType>({\n        mode: \"onSubmit\",\n    });\n\n    return <div className={s.form_wrapper}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input defaultValue={filter.term} className={s.input} {...register('term') }/>\n            <select  className={s.select} {...register('friend' )}>\n                <option value=\"null\">All</option>\n                <option value=\"true\">Followed</option>\n                <option value=\"false\">Unfollowed</option>\n            </select>\n            <input type=\"submit\" value=\"Find\" className={s.btn}></input>\n        </form>\n    </div>\n\n})","import React, {FC, useEffect, useState} from \"react\";\nimport s from \"./Users.module.css\"\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\nimport {UsersSearchForm} from \"./UsersSearchForm\";\nimport {FilterType, follow as followThunk, requestUsers, unfollow as unfollowThunk} from \"../../redux/users-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersFilter\n} from \"../../redux/users-selector\";\nimport {AppDispatch} from \"../../redux/redux-store\";\nimport {useLocation, useNavigate, useSearchParams} from \"react-router-dom\";\n\ntype QueryParamsType = {term?: string; friend?: string; page?: string}\nexport const Users: FC = () => {\n\n    const users = useSelector(getUsers)\n    const totalItemsCount = useSelector(getTotalUsersCount)\n    const currentPage = useSelector(getCurrentPage)\n    const pageSize = useSelector(getPageSize)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch: AppDispatch = useDispatch()\n    const history = useNavigate()\n    const location = useLocation()\n    const [searchParams] = useSearchParams(location.search)\n\n    useEffect(() => {\n        let parsed: QueryParamsType = Object.fromEntries([...searchParams])\n\n        let actualPage = currentPage\n        let actualFilter = filter\n\n        if(!!parsed.page) actualPage = Number(parsed.page)\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term}\n\n        switch (parsed.friend) {\n            case \"null\":\n                actualFilter = {...actualFilter, friend: null}\n                break;\n            case \"true\": {\n                actualFilter = {...actualFilter, friend: true}\n            }\n            break;\n            case \"false\": {\n                actualFilter = {...actualFilter, friend: false}\n                break\n            }\n        }\n\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n    }, [])\n\n    useEffect(() => {\n\n\n        history({\n            pathname: '/users',\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`,\n        })\n    }, [filter, currentPage])\n\n    const onPageChanged = (pageNumber: number) => {\n        dispatch(requestUsers(pageNumber, pageSize, filter));\n    }\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n    const follow = (userId: number) => {\n        dispatch(followThunk(userId));\n    }\n    const unfollow = (userId: number) => {\n        dispatch(unfollowThunk(userId));\n    }\n\n    return <div className={s.content}>\n        <h2 className={s.title}>List of Users</h2>\n        <div className={s.pagination}>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                       totalItemsCount={totalItemsCount} pageSize={pageSize}/>\n        </div>\n        <div><UsersSearchForm onFilterChanged={onFilterChanged}/></div>\n        {users.map(u => <User key={u.id} user={u}\n                              followingInProgress={followingInProgress}\n                              unfollow={unfollow}\n                              follow={follow}/>)\n        }\n    </div>\n}\n\n\n","import {useSelector} from \"react-redux\";\nimport React, {FC} from \"react\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {getIsFetching} from \"../../redux/users-selector\";\nimport {Users} from \"./Users\";\n\n\n\n const UsersPage: FC = () => {\n    const isFetching =  useSelector(getIsFetching)\n\n    return <>\n        {isFetching ? <Preloader/> : null}\n        <Users/>\n    </>\n}\nexport default UsersPage"],"names":["getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalItemsCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","filter","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","onClick","p","map","className","s","user","unfollow","follow","to","id","src","photos","small","userDefaultPic","alt","name","status","followed","disabled","some","UsersSearchForm","React","props","useSelector","useForm","mode","register","handleSubmit","onSubmit","data","filterF","term","friend","onFilterChanged","defaultValue","value","type","Users","dispatch","useDispatch","history","useNavigate","location","useLocation","useSearchParams","search","searchParams","useEffect","parsed","Object","fromEntries","actualPage","actualFilter","page","Number","requestUsers","pathname","userId","followThunk","unfollowThunk","pageNumber","u","Preloader"],"sourceRoot":""}