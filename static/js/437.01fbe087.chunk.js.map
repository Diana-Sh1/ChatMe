{"version":3,"file":"static/js/437.01fbe087.chunk.js","mappings":"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","sources":["redux/users-selector.ts","webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["import {AppStateType} from \"./redux-store\";\n\nexport const getUsers = (state: AppStateType) => {\n    return state.usersPage.users;\n}\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalItemsCount\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}\nexport const getUsersFilter = (state: AppStateType) => {\n    return state.usersPage.filter\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Users_content__eVkcM\",\"inner\":\"Users_inner__79Gij\",\"user_logo\":\"Users_user_logo__xncyl\",\"title\":\"Users_title__605GK\",\"block_main\":\"Users_block_main__MgENi\",\"block_buttons\":\"Users_block_buttons__ZEmQi\",\"user_info\":\"Users_user_info__TBDOm\",\"status_info\":\"Users_status_info__kBCoF\",\"subscribe_btn\":\"Users_subscribe_btn__u3aDb\",\"userInfo_btn\":\"Users_userInfo_btn__OeMtH\",\"pagination\":\"Users_pagination__S-sSj\",\"selectedPage\":\"Users_selectedPage__PbAMG\",\"form_wrapper\":\"Users_form_wrapper__xJUx+\",\"input\":\"Users_input__-PUnQ\",\"select\":\"Users_select__Gdjtl\",\"errors\":\"Users_errors__0uSpI\",\"btn\":\"Users_btn__VOkk+\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\"};","import React, {FC} from \"react\";\nimport s from \"./Paginator.module.css\"\nimport {useState} from \"react\";\n\ntype Props = {\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    totalItemsCount: number\n    pageSize: number\n    portionSize?: number\n}\nlet Paginator: FC<Props> = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 8}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages: number[] = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionNumber = portionNumber * portionSize;\n\n\n    return <>\n        {portionNumber > 1 &&\n            <button onClick={()=> {setPortionNumber(portionNumber - 1 )}}>&#8592;</button>}\n\n        {pages\n            .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\n            .map(p => {\n            return <span key={p} onClick={() => {\n                onPageChanged(p)\n            }}\n                         className={currentPage === p ? s.selectedPage : ''}>{p}</span>\n        })}\n        { portionCount > portionNumber &&\n            <button onClick={()=> {setPortionNumber (portionNumber + 1)}}>&#8594;</button>\n        }\n    </>\n}\n\nexport default Paginator;","import React, {FC} from \"react\";\nimport s from \"./Users.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport userDefaultPic from '../../assets/user_default2.png'\nimport {UserType} from \"../../types/types\";\n\ntype PropsType = {\n    user: UserType\n    followingInProgress: number[]\n    follow: (userId: number)=> void\n    unfollow: (userId: number)=> void\n}\nconst User: FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\n    return <div className={s.inner}>\n        <div className={s.user_logo}>\n            <NavLink to={'/profile/' + user.id}>\n                <img src={user.photos.small != null ? user.photos.small : userDefaultPic} alt=\"\"/>\n            </NavLink>\n\n        </div>\n        <div className={s.block_main}>\n            <div className={s.user_info}>{user.name}</div>\n            <div className={s.status_info}>{user.status}</div>\n        </div>\n        <div className={s.block_buttons}>\n            {user.followed\n                ? <button disabled={followingInProgress\n                    .some(id => id === user.id)} onClick={() => { unfollow(user.id)\n                }} className={s.subscribe_btn}>Unfollow</button>\n                : <button disabled={followingInProgress\n                    .some(id => id === user.id)} onClick={() => {follow(user.id)\n                }} className={s.subscribe_btn}>Follow</button>\n            }\n        </div>\n        </div>\n        }\nexport default User;\n","import {useForm} from \"react-hook-form\";\nimport React, {FC} from \"react\";\nimport {FilterType} from \"../../redux/users-reducer\";\nimport s from \"./Users.module.css\"\nimport {useSelector} from \"react-redux\";\nimport {getUsersFilter} from \"../../redux/users-selector\";\n\ntype PropsType = {\n    onFilterChanged: (filter: FilterType)=> void\n}\n\nexport const UsersSearchForm: FC<PropsType> = React.memo((props) => {\n\n    const filter = useSelector(getUsersFilter)\n\n    type FriendType = \"true\" | \"false\" | \"null\"\n\n    type FormType = {\n        term: string;\n        friend: FriendType\n    };\n\n    const onSubmit = (data: FormType) => {\n        const filterF: FilterType = {\n            term: data.term,\n            friend: data.friend === \"null\" ? null : data.friend === \"true\"\n        }\n        props.onFilterChanged(filterF);\n\n    }\n    const {register, handleSubmit} = useForm<FormType>({\n        mode: \"onSubmit\",\n    });\n\n    return <div className={s.form_wrapper}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input defaultValue={filter.term} className={s.input} {...register('term') }/>\n            <select  className={s.select} {...register('friend' )}>\n                <option value=\"null\">All</option>\n                <option value=\"true\">Followed</option>\n                <option value=\"false\">Unfollowed</option>\n            </select>\n            <input type=\"submit\" value=\"Find\" className={s.btn}></input>\n        </form>\n    </div>\n\n})","import React, {FC, useEffect, useState} from \"react\";\nimport s from \"./Users.module.css\"\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\nimport {UsersSearchForm} from \"./UsersSearchForm\";\nimport {FilterType, follow as followThunk, requestUsers, unfollow as unfollowThunk} from \"../../redux/users-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersFilter\n} from \"../../redux/users-selector\";\nimport {AppDispatch} from \"../../redux/redux-store\";\nimport {useLocation, useNavigate, useSearchParams} from \"react-router-dom\";\n\ntype QueryParamsType = {term?: string; friend?: string; page?: string}\nexport const Users: FC = () => {\n\n    const users = useSelector(getUsers)\n    const totalItemsCount = useSelector(getTotalUsersCount)\n    const currentPage = useSelector(getCurrentPage)\n    const pageSize = useSelector(getPageSize)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch: AppDispatch = useDispatch()\n    const history = useNavigate()\n    const location = useLocation()\n    const [searchParams] = useSearchParams(location.search)\n\n    useEffect(() => {\n        let parsed: QueryParamsType = Object.fromEntries([...searchParams])\n\n        let actualPage = currentPage\n        let actualFilter = filter\n\n        if(!!parsed.page) actualPage = Number(parsed.page)\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term}\n\n        switch (parsed.friend) {\n            case \"null\":\n                actualFilter = {...actualFilter, friend: null}\n                break;\n            case \"true\": {\n                actualFilter = {...actualFilter, friend: true}\n            }\n            break;\n            case \"false\": {\n                actualFilter = {...actualFilter, friend: false}\n                break\n            }\n        }\n\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n    }, [])\n\n    useEffect(() => {\n\n\n        history({\n            pathname: '/users',\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`,\n        })\n    }, [filter, currentPage])\n\n    const onPageChanged = (pageNumber: number) => {\n        dispatch(requestUsers(pageNumber, pageSize, filter));\n    }\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n    const follow = (userId: number) => {\n        dispatch(followThunk(userId));\n    }\n    const unfollow = (userId: number) => {\n        dispatch(unfollowThunk(userId));\n    }\n\n    return <div className={s.content}>\n        <h2 className={s.title}>List of Users</h2>\n        <div className={s.pagination}>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                       totalItemsCount={totalItemsCount} pageSize={pageSize}/>\n        </div>\n        <div><UsersSearchForm onFilterChanged={onFilterChanged}/></div>\n        {users.map(u => <User key={u.id} user={u}\n                              followingInProgress={followingInProgress}\n                              unfollow={unfollow}\n                              follow={follow}/>)\n        }\n    </div>\n}\n\n\n","import {useSelector} from \"react-redux\";\nimport React, {FC} from \"react\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {getIsFetching} from \"../../redux/users-selector\";\nimport {Users} from \"./Users\";\n\n\n\n const UsersPage: FC = () => {\n    const isFetching =  useSelector(getIsFetching)\n\n    return <>\n        {isFetching ? <Preloader/> : null}\n        <Users/>\n    </>\n}\nexport default UsersPage"],"names":["getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalItemsCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","filter","_ref","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","_jsxs","_Fragment","children","_jsx","onClick","p","map","className","s","user","unfollow","follow","NavLink","to","id","src","photos","small","userDefaultPic","alt","name","status","followed","disabled","some","UsersSearchForm","React","props","useSelector","_useForm","useForm","mode","register","handleSubmit","onSubmit","data","filterF","term","friend","onFilterChanged","_objectSpread","defaultValue","value","type","Users","dispatch","useDispatch","history","useNavigate","location","useLocation","_useSearchParams","useSearchParams","search","searchParams","useEffect","parsed","Object","fromEntries","_toConsumableArray","actualPage","actualFilter","page","Number","requestUsers","pathname","concat","userId","followThunk","unfollowThunk","Paginator","pageNumber","u","User","Preloader"],"sourceRoot":""}