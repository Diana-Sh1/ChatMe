{"version":3,"file":"static/js/677.6cca1f26.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__KGl8d\",\"errors\":\"Dialogs_errors__kg6w2\",\"dialogs\":\"Dialogs_dialogs__oe96H\",\"h2\":\"Dialogs_h2__yMxVx\",\"pic\":\"Dialogs_pic__1xZFS\",\"dialogNav\":\"Dialogs_dialogNav__MGGP3\",\"link\":\"Dialogs_link__LWAut\",\"item\":\"Dialogs_item__q23mU\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"logo_name\":\"Dialogs_logo_name__gz2G+\",\"logo\":\"Dialogs_logo__145c0\",\"person_message\":\"Dialogs_person_message__eugxZ\",\"message\":\"Dialogs_message__ZEWo0\",\"image\":\"Dialogs_image__wl+13\",\"enter_text\":\"Dialogs_enter_text__sQM4T\",\"textarea\":\"Dialogs_textarea__anpMz\",\"btn_wrapper\":\"Dialogs_btn_wrapper__O+-2y\"};","import s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {FC} from \"react\";\n\ntype Props = {\n    name: string\n    id: number\n}\nconst DialogItem: FC<Props> = ({name, id}) => {\n    return (\n        <li className={s.link}>\n            <NavLink to={\"/dialogs/\" + id} className = { navData => navData.isActive ? s.active : s.item }>{name}</NavLink>\n        </li>\n    )\n}\n\n\nexport default DialogItem;","import s from \"./../Dialogs.module.css\"\nimport {FC} from \"react\";\n\n\ntype Props = {\n    src: string\n    person: string\n    message: string\n}\n\nconst Message: FC<Props> = ({src, person, message}) => {\n    return (\n\n        <div className={s.person_message}>\n            <div className={s.logo_name}>\n                <div className={s.logo}>\n                    <img className={s.image} src={src} alt=\"\"/>\n                </div>\n                <span>{person}</span>\n            </div>\n            <div className={s.message}>{message}</div>\n\n        </div>\n\n    )\n}\n\nexport default Message;","import s from \"./Dialogs.module.css\"\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {useForm} from \"react-hook-form\";\nimport React, {FC} from \"react\";\nimport Button from \"../Button/Button\";\nimport {DialogsType, MessagesType} from \"../../types/types\";\n\ntype Props = {\n    dialogs: DialogsType[]\n    messages: MessagesType[]\n    sendMessage: (newMessageBody: string) => void\n}\n\nconst Dialogs: FC<Props> = ({dialogs, messages, sendMessage}) => {\n    let DialogsElements = dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\n    let messagesElements = messages.map(m => <Message  key={m.id} message={m.message} person={m.person} src={m.src}/>)\n\n    type FormValues = {\n        newMessageBody: string;\n    };\n    const onSubmit = (data: FormValues) => {\n        sendMessage(data.newMessageBody);\n        reset();\n    }\n    const {register, formState: {errors}, handleSubmit, reset} = useForm<FormValues>({\n        mode: \"onSubmit\"\n    });\n    return (\n        <div className={s.content}>\n            <h2 className={s.h2}>Dialogs</h2>\n            <div className={s.dialogs}>\n                <ul className={s.dialogNav}>\n                    {DialogsElements}\n                </ul>\n                <div className={s.messages}>\n                    {messagesElements}\n\n                </div>\n                <form className={s.enter_text} onSubmit={handleSubmit(onSubmit)}>\n                    <textarea {...register('newMessageBody', {\n                        required: \"Required field\",\n                        maxLength: {\n                            value: 300,\n                            message: \"Max length 300 symbols\"\n                        }\n                    })} className={s.textarea}/>\n                    <span>{errors?.newMessageBody && <p className={s.errors}>{errors.newMessageBody?.message} </p>}</span>\n                    <div className={s.btn_wrapper}><Button/></div>\n                </form>\n            </div>\n\n        </div>\n    )\n}\nexport default Dialogs;","import React, {Component} from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\n\nexport function withAuthRedirect(Component: React.ComponentType<mapStateToPropsforRedirectPropsType>) {\n    class RedirectComponent extends React.Component<mapStateToPropsforRedirectPropsType> {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n            return <Component {...this.props} />;\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(\n        RedirectComponent\n    );\n    return ConnectedAuthRedirectComponent;\n};\n\n    type mapStateToPropsforRedirectPropsType = {\n    isAuth: boolean\n}\n    let mapStateToPropsforRedirect = (state: AppStateType): mapStateToPropsforRedirectPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n    };\n};","import Dialogs from \"./Dialogs\";\nimport {actions} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\nimport React from \"react\";\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n\n    }\n}\n\nexport default compose<React.ComponentType>\n(connect(mapStateToProps, {sendMessage: actions.sendMessage}),\n    withAuthRedirect)(Dialogs)\n"],"names":["name","id","className","s","to","navData","isActive","src","person","message","alt","dialogs","messages","sendMessage","DialogsElements","map","d","messagesElements","m","useForm","mode","register","errors","formState","handleSubmit","reset","onSubmit","data","newMessageBody","required","maxLength","value","Button","mapStateToPropsforRedirect","state","isAuth","auth","compose","connect","dialogsPage","actions","Component","RedirectComponent","this","props","React","Dialogs"],"sourceRoot":""}