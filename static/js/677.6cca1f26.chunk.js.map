{"version":3,"file":"static/js/677.6cca1f26.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__KGl8d\",\"errors\":\"Dialogs_errors__kg6w2\",\"dialogs\":\"Dialogs_dialogs__oe96H\",\"h2\":\"Dialogs_h2__yMxVx\",\"pic\":\"Dialogs_pic__1xZFS\",\"dialogNav\":\"Dialogs_dialogNav__MGGP3\",\"link\":\"Dialogs_link__LWAut\",\"item\":\"Dialogs_item__q23mU\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"logo_name\":\"Dialogs_logo_name__gz2G+\",\"logo\":\"Dialogs_logo__145c0\",\"person_message\":\"Dialogs_person_message__eugxZ\",\"message\":\"Dialogs_message__ZEWo0\",\"image\":\"Dialogs_image__wl+13\",\"enter_text\":\"Dialogs_enter_text__sQM4T\",\"textarea\":\"Dialogs_textarea__anpMz\",\"btn_wrapper\":\"Dialogs_btn_wrapper__O+-2y\"};","import s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport {FC} from \"react\";\n\ntype Props = {\n    name: string\n    id: number\n}\nconst DialogItem: FC<Props> = ({name, id}) => {\n    return (\n        <li className={s.link}>\n            <NavLink to={\"/dialogs/\" + id} className = { navData => navData.isActive ? s.active : s.item }>{name}</NavLink>\n        </li>\n    )\n}\n\n\nexport default DialogItem;","import s from \"./../Dialogs.module.css\"\nimport {FC} from \"react\";\n\n\ntype Props = {\n    src: string\n    person: string\n    message: string\n}\n\nconst Message: FC<Props> = ({src, person, message}) => {\n    return (\n\n        <div className={s.person_message}>\n            <div className={s.logo_name}>\n                <div className={s.logo}>\n                    <img className={s.image} src={src} alt=\"\"/>\n                </div>\n                <span>{person}</span>\n            </div>\n            <div className={s.message}>{message}</div>\n\n        </div>\n\n    )\n}\n\nexport default Message;","import s from \"./Dialogs.module.css\"\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {useForm} from \"react-hook-form\";\nimport React, {FC} from \"react\";\nimport Button from \"../Button/Button\";\nimport {DialogsType, MessagesType} from \"../../types/types\";\n\ntype Props = {\n    dialogs: DialogsType[]\n    messages: MessagesType[]\n    sendMessage: (newMessageBody: string) => void\n}\n\nconst Dialogs: FC<Props> = ({dialogs, messages, sendMessage}) => {\n    let DialogsElements = dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\n    let messagesElements = messages.map(m => <Message  key={m.id} message={m.message} person={m.person} src={m.src}/>)\n\n    type FormValues = {\n        newMessageBody: string;\n    };\n    const onSubmit = (data: FormValues) => {\n        sendMessage(data.newMessageBody);\n        reset();\n    }\n    const {register, formState: {errors}, handleSubmit, reset} = useForm<FormValues>({\n        mode: \"onSubmit\"\n    });\n    return (\n        <div className={s.content}>\n            <h2 className={s.h2}>Dialogs</h2>\n            <div className={s.dialogs}>\n                <ul className={s.dialogNav}>\n                    {DialogsElements}\n                </ul>\n                <div className={s.messages}>\n                    {messagesElements}\n\n                </div>\n                <form className={s.enter_text} onSubmit={handleSubmit(onSubmit)}>\n                    <textarea {...register('newMessageBody', {\n                        required: \"Required field\",\n                        maxLength: {\n                            value: 300,\n                            message: \"Max length 300 symbols\"\n                        }\n                    })} className={s.textarea}/>\n                    <span>{errors?.newMessageBody && <p className={s.errors}>{errors.newMessageBody?.message} </p>}</span>\n                    <div className={s.btn_wrapper}><Button/></div>\n                </form>\n            </div>\n\n        </div>\n    )\n}\nexport default Dialogs;","import React, {Component} from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\n\nexport function withAuthRedirect(Component: React.ComponentType<mapStateToPropsforRedirectPropsType>) {\n    class RedirectComponent extends React.Component<mapStateToPropsforRedirectPropsType> {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n            return <Component {...this.props} />;\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(\n        RedirectComponent\n    );\n    return ConnectedAuthRedirectComponent;\n};\n\n    type mapStateToPropsforRedirectPropsType = {\n    isAuth: boolean\n}\n    let mapStateToPropsforRedirect = (state: AppStateType): mapStateToPropsforRedirectPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n    };\n};","import Dialogs from \"./Dialogs\";\nimport {actions} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\nimport React from \"react\";\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n\n    }\n}\n\nexport default compose<React.ComponentType>\n(connect(mapStateToProps, {sendMessage: actions.sendMessage}),\n    withAuthRedirect)(Dialogs)\n"],"names":["_ref","name","id","_jsx","className","s","children","NavLink","to","navData","isActive","src","person","message","_jsxs","alt","_errors$newMessageBod","dialogs","messages","sendMessage","DialogsElements","map","d","DialogItem","messagesElements","m","Message","_useForm","useForm","mode","register","errors","formState","handleSubmit","reset","onSubmit","data","newMessageBody","_objectSpread","required","maxLength","value","Button","mapStateToPropsforRedirect","state","isAuth","auth","compose","connect","dialogsPage","actions","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","props","Navigate","React","Dialogs"],"sourceRoot":""}