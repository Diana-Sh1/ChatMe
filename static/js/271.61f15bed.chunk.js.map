{"version":3,"file":"static/js/271.61f15bed.chunk.js","mappings":"0KACA,EAAsB,sB,6BCahBA,EAAW,WACb,IAAMC,GAAwBC,EAAAA,EAAAA,MACxBC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKH,MAAM,IASrE,OAPAI,EAAAA,EAAAA,YAAU,WAEN,OADAN,GAASO,EAAAA,EAAAA,OACF,WACHP,GAASQ,EAAAA,EAAAA,MACb,CACJ,GAAG,KAEI,yBACS,UAAXN,GAAqB,yBAAK,kDACvB,iCACI,SAACO,EAAQ,KACT,SAACC,EAAc,QAI/B,EACMD,EAAe,WACjB,IAAME,GAAWR,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKM,QAAQ,IAEzE,OAAO,gBAAKC,MAAO,CAACC,OAAQ,QAASC,UAAW,QAAQ,SACnDH,EAASI,KAAI,SAACC,EAAGC,GAAK,OAAK,SAACC,EAAO,CAAaC,QAASH,GAAhBC,EAAoB,KAGtE,EACMC,EAA4C,SAAH,GAAmB,IAAdC,EAAO,EAAPA,QAChD,OAAO,4BACH,gBAAKC,UAAWC,EAAOC,IAAKH,EAAQI,QAAQ,KAAC,uBAAIJ,EAAQK,YACzD,kBACCL,EAAQA,SACT,oBAER,EAGMT,EAAqB,WACvB,OAA8Be,EAAAA,EAAAA,UAAS,IAAG,eAAnCN,EAAO,KAAEO,EAAU,KACpBxB,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,KAAKH,MAAM,IAE/DF,GAAwBC,EAAAA,EAAAA,MAQ9B,OAAO,4BACH,0BACI,qBAAU0B,SAAU,SAACC,GAAC,OAAKF,EAAWE,EAAEC,cAAcC,MAAM,EAAEA,MAAOX,OAEzE,0BACI,mBAAQY,SAAqB,UAAX7B,EAAoB8B,QAZnB,WAClBb,IAGLnB,GAASiC,EAAAA,EAAAA,IAAYd,IACrBO,EAAW,IACf,EAM0E,SAAC,aAI/E,EAEA,EAnEqB,WACjB,OAAO,0BACH,SAAC3B,EAAI,KAEb,C","sources":["webpack://my-app/./src/pages/Chat/ChatPage.module.css?29d9","pages/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pic\":\"ChatPage_pic__5XMob\"};","import {FC, useEffect, useState} from \"react\";\nimport s from \"./ChatPage.module.css\"\nimport {ChatMessageType} from \"../../api/chat-api\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, AppStateType} from \"../../redux/redux-store\";\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../redux/chat-reduces\";\n\n\nconst ChatPage: FC = () => {\n    return <div>\n        <Chat/>\n    </div>\n}\n\nconst Chat: FC = () => {\n    const dispatch: AppDispatch = useDispatch()\n    const status = useSelector((state: AppStateType) => state.chat.status)\n\n    useEffect(() => {\n        dispatch(startMessagesListening())\n        return () => {\n            dispatch(stopMessagesListening())\n        }\n    }, [])\n\n    return <div>\n        {status === 'error' ? <div>Some error occured. Please refresh the page.</div> :\n            <>\n                <Messages/>\n                <AddMessageForm/>\n            </>\n        }\n    </div>\n}\nconst Messages: FC = () => {\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\n\n    return <div style={{height: \"400px\", overflowY: \"auto\"}}>\n        {messages.map((m, index) => <Message key={index} message={m}/>)}\n\n    </div>\n}\nconst Message: FC<{ message: ChatMessageType }> = ({message}) => {\n    return <div>\n        <img className={s.pic} src={message.photo}/> <b>{message.userName}</b>\n        <br/>\n        {message.message}\n        <hr/>\n    </div>\n}\n\n\nconst AddMessageForm: FC = () => {\n    const [message, setMessage] = useState('');\n    const status = useSelector((state: AppStateType) => state.chat.status)\n\n    const dispatch: AppDispatch = useDispatch()\n    const sendMessageHandler = () => {\n        if (!message) {\n            return\n        }\n        dispatch(sendMessage(message))\n        setMessage('')\n    }\n    return <div>\n        <div>\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\n        </div>\n        <div>\n            <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\n        </div>\n\n    </div>\n}\n\nexport default ChatPage;"],"names":["Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stopMessagesListening","Messages","AddMessageForm","messages","style","height","overflowY","map","m","index","Message","message","className","s","src","photo","userName","useState","setMessage","onChange","e","currentTarget","value","disabled","onClick","sendMessage"],"sourceRoot":""}